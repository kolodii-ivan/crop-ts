{"version":3,"file":"jcrop.js","mappings":"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","sources":["webpack://Jcrop/webpack/universalModuleDefinition","webpack://Jcrop/webpack/bootstrap","webpack://Jcrop/webpack/runtime/define property getters","webpack://Jcrop/webpack/runtime/hasOwnProperty shorthand","webpack://Jcrop/./src/lib/EventEmitter.ts","webpack://Jcrop/./src/lib/DomUtil.ts","webpack://Jcrop/./src/components/DragState.ts","webpack://Jcrop/./src/components/Animator.ts","webpack://Jcrop/./src/components/Selection.ts","webpack://Jcrop/./src/components/StageManager.ts","webpack://Jcrop/./src/components/ImageLoader.ts","webpack://Jcrop/./src/components/Touch.ts","webpack://Jcrop/./src/filters/registry.ts","webpack://Jcrop/./src/defaults.ts","webpack://Jcrop/./src/Jcrop.ts","webpack://Jcrop/./src/filters/ConstrainFilter.ts","webpack://Jcrop/./src/filters/RatioFilter.ts","webpack://Jcrop/./src/index.ts","webpack://Jcrop/./src/filters/ShadeFilter.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Jcrop\"] = factory();\n\telse\n\t\troot[\"Jcrop\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Simple EventEmitter implementation to replace jQuery events\n */\nexport class EventEmitter {\n  private events: Map<string, Set<Function>> = new Map();\n\n  /**\n   * Add an event listener\n   */\n  on(event: string, callback: Function): this {\n    if (!this.events.has(event)) {\n      this.events.set(event, new Set());\n    }\n    this.events.get(event)!.add(callback);\n    return this;\n  }\n\n  /**\n   * Remove an event listener\n   */\n  off(event: string, callback?: Function): this {\n    if (!this.events.has(event)) return this;\n    \n    if (callback) {\n      this.events.get(event)!.delete(callback);\n    } else {\n      this.events.delete(event);\n    }\n    return this;\n  }\n\n  /**\n   * Trigger an event\n   */\n  emit(event: string, ...args: any[]): this {\n    if (!this.events.has(event)) return this;\n    \n    this.events.get(event)!.forEach(callback => {\n      try {\n        callback(...args);\n      } catch (e) {\n        console.error('Error in event handler:', e);\n      }\n    });\n    return this;\n  }\n}","/**\n * DOM utility functions to replace jQuery\n */\nexport class DomUtil {\n  /**\n   * Create an element with attributes and optional content\n   */\n  static createElement<K extends keyof HTMLElementTagNameMap>(\n    tag: K,\n    attributes: Record<string, string> = {},\n    content?: string\n  ): HTMLElementTagNameMap[K] {\n    const element = document.createElement(tag);\n    \n    Object.entries(attributes).forEach(([key, value]) => {\n      if (key === 'class') {\n        element.className = value;\n      } else {\n        element.setAttribute(key, value);\n      }\n    });\n    \n    if (content) {\n      element.textContent = content;\n    }\n    \n    return element;\n  }\n\n  /**\n   * Add class to element\n   */\n  static addClass(element: HTMLElement, className: string): void {\n    element.classList.add(className);\n  }\n\n  /**\n   * Remove class from element\n   */\n  static removeClass(element: HTMLElement, className: string): void {\n    element.classList.remove(className);\n  }\n\n  /**\n   * Toggle class on element\n   */\n  static toggleClass(element: HTMLElement, className: string, force?: boolean): void {\n    element.classList.toggle(className, force);\n  }\n\n  /**\n   * Check if element has class\n   */\n  static hasClass(element: HTMLElement, className: string): boolean {\n    return element.classList.contains(className);\n  }\n\n  /**\n   * Get element position relative to offset parent\n   */\n  static getPosition(element: HTMLElement): { left: number; top: number } {\n    const rect = element.getBoundingClientRect();\n    const offsetParent = element.offsetParent || document.body;\n    const offsetRect = offsetParent.getBoundingClientRect();\n\n    return {\n      left: rect.left - offsetRect.left,\n      top: rect.top - offsetRect.top\n    };\n  }\n\n  /**\n   * Set element CSS\n   */\n  static css(element: HTMLElement, styles: Partial<CSSStyleDeclaration> | string, value?: string): void {\n    if (typeof styles === 'string' && value !== undefined) {\n      // Single property assignment\n      element.style[styles as any] = value;\n    } else if (typeof styles === 'object') {\n      // Multiple properties\n      Object.entries(styles).forEach(([key, value]) => {\n        element.style[key as any] = value as string;\n      });\n    }\n  }\n\n  /**\n   * Get element width\n   */\n  static width(element: HTMLElement): number {\n    return element.offsetWidth;\n  }\n\n  /**\n   * Get element height\n   */\n  static height(element: HTMLElement): number {\n    return element.offsetHeight;\n  }\n\n  /**\n   * Set element dimensions\n   */\n  static setDimensions(element: HTMLElement, width: number, height: number): void {\n    element.style.width = `${width}px`;\n    element.style.height = `${height}px`;\n  }\n\n  /**\n   * Attach event listener\n   */\n  static on(\n    element: HTMLElement | Document | Window,\n    event: string,\n    selector: string | EventListener,\n    handler?: EventListener\n  ): void {\n    if (typeof selector === 'function') {\n      // Direct event binding\n      element.addEventListener(event, selector);\n    } else {\n      // Delegated event binding\n      element.addEventListener(event, (e) => {\n        if (!handler) return;\n        \n        const target = e.target as HTMLElement;\n        if (!target) return;\n\n        const matchingElement = target.closest(selector);\n        if (matchingElement) {\n          handler.call(matchingElement, e);\n        }\n      });\n    }\n  }\n\n  /**\n   * Remove event listener\n   */\n  static off(\n    element: HTMLElement | Document | Window,\n    event: string,\n    handler: EventListener\n  ): void {\n    element.removeEventListener(event, handler);\n  }\n\n  /**\n   * Wrap an element with a new container\n   */\n  static wrap(element: HTMLElement, wrapper: HTMLElement): HTMLElement {\n    if (element.parentNode) {\n      element.parentNode.insertBefore(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Insert element before target\n   */\n  static before(target: HTMLElement, element: HTMLElement): void {\n    if (target.parentNode) {\n      target.parentNode.insertBefore(element, target);\n    }\n  }\n\n  /**\n   * Append element to parent\n   */\n  static append(parent: HTMLElement, element: HTMLElement): void {\n    parent.appendChild(element);\n  }\n\n  /**\n   * Remove element from DOM\n   */\n  static remove(element: HTMLElement): void {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n\n  /**\n   * Get computed style value\n   */\n  static getComputedStyle(element: HTMLElement, property: string): string {\n    return window.getComputedStyle(element).getPropertyValue(property);\n  }\n}","import { Point } from '../types';\n\n/**\n * Manages state during drag operations\n */\nexport class DragState {\n  public startX: number;\n  public startY: number;\n  public ox: number;\n  public oy: number;\n  public direction: string;\n  public xmod: number = 0;\n  public ymod: number = 0;\n  public offsetX: number = 0;\n  public offsetY: number = 0;\n  public selection: any;\n  public onMove: (e: MouseEvent | TouchEvent) => void;\n  public onEnd: (e: MouseEvent | TouchEvent) => void;\n\n  /**\n   * Create a new DragState\n   */\n  constructor(e: MouseEvent | TouchEvent, selection: any, direction: string) {\n    this.selection = selection;\n    this.direction = direction;\n    \n    const pos = this.getEventPosition(e);\n    const selectionRect = selection.get();\n    \n    this.startX = pos.x;\n    this.startY = pos.y;\n    this.ox = selectionRect.x;\n    this.oy = selectionRect.y;\n    \n    this.onMove = this.createMoveHandler();\n    this.onEnd = this.createEndHandler();\n    \n    // Set document-level event handlers\n    document.addEventListener('mousemove', this.onMove);\n    document.addEventListener('mouseup', this.onEnd);\n    document.addEventListener('touchmove', this.onMove, { passive: false });\n    document.addEventListener('touchend', this.onEnd);\n  }\n\n  /**\n   * Get position from event (handles both mouse and touch events)\n   */\n  getEventPosition(e: MouseEvent | TouchEvent): Point {\n    let pageX: number, pageY: number;\n    \n    if ('touches' in e) {\n      // Touch event\n      if (e.touches.length) {\n        pageX = e.touches[0].pageX;\n        pageY = e.touches[0].pageY;\n      } else {\n        // touchend may not have touches\n        return { x: this.startX, y: this.startY };\n      }\n    } else {\n      // Mouse event\n      pageX = e.pageX;\n      pageY = e.pageY;\n    }\n    \n    // Get position relative to container\n    const containerRect = this.selection.core.container.getBoundingClientRect();\n    const docScrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n    const docScrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    \n    return {\n      x: pageX - (containerRect.left + docScrollLeft),\n      y: pageY - (containerRect.top + docScrollTop)\n    };\n  }\n\n  /**\n   * Create the move event handler\n   */\n  createMoveHandler(): (e: MouseEvent | TouchEvent) => void {\n    return (e: MouseEvent | TouchEvent) => {\n      e.preventDefault();\n      \n      const pos = this.getEventPosition(e);\n      const diffX = pos.x - this.startX;\n      const diffY = pos.y - this.startY;\n      \n      // Update the selection based on the drag direction\n      this.updateSelection(diffX, diffY);\n    };\n  }\n\n  /**\n   * Create the end event handler\n   */\n  createEndHandler(): (e: MouseEvent | TouchEvent) => void {\n    return (e: MouseEvent | TouchEvent) => {\n      this.selection.endDrag();\n      e.preventDefault();\n    };\n  }\n\n  /**\n   * Update selection based on drag movement\n   */\n  updateSelection(diffX: number, diffY: number): void {\n    const selection = this.selection;\n    const rect = selection.get();\n    const direction = this.direction;\n    \n    // Make a copy of the rectangle that we can modify\n    const newRect = { ...rect };\n    \n    // Handle different drag directions\n    switch (direction) {\n      case 'move':\n        newRect.x = this.ox + diffX;\n        newRect.y = this.oy + diffY;\n        newRect.x2 = newRect.x + rect.w;\n        newRect.y2 = newRect.y + rect.h;\n        break;\n        \n      case 'n':\n        newRect.y = this.oy + diffY;\n        newRect.h = rect.h - diffY;\n        break;\n        \n      case 's':\n        newRect.h = rect.h + diffY;\n        break;\n        \n      case 'e':\n        newRect.w = rect.w + diffX;\n        break;\n        \n      case 'w':\n        newRect.x = this.ox + diffX;\n        newRect.w = rect.w - diffX;\n        break;\n        \n      case 'nw':\n        newRect.x = this.ox + diffX;\n        newRect.y = this.oy + diffY;\n        newRect.w = rect.w - diffX;\n        newRect.h = rect.h - diffY;\n        break;\n        \n      case 'ne':\n        newRect.y = this.oy + diffY;\n        newRect.w = rect.w + diffX;\n        newRect.h = rect.h - diffY;\n        break;\n        \n      case 'sw':\n        newRect.x = this.ox + diffX;\n        newRect.w = rect.w - diffX;\n        newRect.h = rect.h + diffY;\n        break;\n        \n      case 'se':\n        newRect.w = rect.w + diffX;\n        newRect.h = rect.h + diffY;\n        break;\n    }\n    \n    // Ensure x2/y2 are updated\n    newRect.x2 = newRect.x + newRect.w;\n    newRect.y2 = newRect.y + newRect.h;\n    \n    // Update the selection\n    selection.element.dispatchEvent(\n      new CustomEvent('cropstart', { \n        detail: [selection, selection.core.unscale(newRect)] \n      })\n    );\n    \n    selection.updateRaw(newRect, direction);\n  }\n}","/**\n * Handles animation of selections\n */\nexport class Animator {\n  private selection: any;\n  private core: any;\n\n  /**\n   * Create a new Animator\n   */\n  constructor(selection: any) {\n    this.selection = selection;\n    this.core = selection.core;\n  }\n\n  /**\n   * Animate a selection to new coordinates\n   */\n  animate(x: number, y: number, w: number, h: number, callback?: () => void): void {\n    if (!this.core.options.animation) {\n      // If animation is disabled, update selection immediately\n      this.selection.updateRaw({\n        x,\n        y,\n        x2: x + w,\n        y2: y + h,\n        w,\n        h\n      }, 'se');\n      \n      if (typeof callback === 'function') {\n        callback();\n      }\n      return;\n    }\n    \n    // Get current coordinates\n    const current = this.selection.get();\n    \n    // Animation settings\n    const duration = this.core.options.animDuration || 400;\n    const startTime = performance.now();\n    \n    // Animation step function\n    const step = (timestamp: number) => {\n      // Calculate progress (0 to 1)\n      const elapsed = timestamp - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      \n      // Calculate interpolated values\n      const newX = current.x + (x - current.x) * progress;\n      const newY = current.y + (y - current.y) * progress;\n      const newW = current.w + (w - current.w) * progress;\n      const newH = current.h + (h - current.h) * progress;\n      \n      // Update selection\n      this.selection.updateRaw({\n        x: newX,\n        y: newY,\n        x2: newX + newW,\n        y2: newY + newH,\n        w: newW,\n        h: newH\n      }, 'se');\n      \n      // Continue animation if not complete\n      if (progress < 1) {\n        requestAnimationFrame(step);\n      } else if (typeof callback === 'function') {\n        callback();\n      }\n    };\n    \n    // Start animation\n    requestAnimationFrame(step);\n  }\n}","import { EventEmitter } from '../lib/EventEmitter';\nimport { DomUtil } from '../lib/DomUtil';\nimport { Rect } from '../types';\nimport { DragState } from './DragState';\nimport { Animator } from './Animator';\n\n/**\n * Default Selection properties\n */\nconst SELECTION_DEFAULTS = {\n  minSize: [8, 8],\n  maxSize: [0, 0],\n  aspectRatio: 0,\n  edge: { n: 0, s: 0, e: 0, w: 0 },\n  bgColor: null,\n  bgOpacity: null,\n  last: null,\n\n  state: null,\n  active: true,\n  linked: true,\n  canDelete: true,\n  canDrag: true,\n  canResize: true,\n  canSelect: true\n};\n\n/**\n * Selection component\n * Manages a single cropping selection\n */\nexport class Selection extends EventEmitter {\n  public element!: HTMLElement;\n  public frame!: HTMLButtonElement;\n  public core: any;\n  public filter: any[] = [];\n  \n  // Properties from defaults\n  public minSize!: number[];\n  public maxSize!: number[];\n  public aspectRatio!: number;\n  public edge!: { n: number; s: number; e: number; w: number };\n  public bgColor!: string | null;\n  public bgOpacity!: number | null;\n  public last!: any;\n  public state!: DragState | null;\n  public active!: boolean;\n  public linked!: boolean;\n  public canDelete!: boolean;\n  public canDrag!: boolean;\n  public canResize!: boolean;\n  public canSelect!: boolean;\n\n  constructor() {\n    super();\n    \n    // Initialize default properties\n    Object.assign(this, SELECTION_DEFAULTS);\n  }\n\n  /**\n   * Initialize selection\n   */\n  init(core: any): void {\n    this.core = core;\n    this.startup();\n    this.linked = core.options.linked;\n    this.attach();\n    this.setOptions(core.options);\n    \n    // Trigger create event\n    this.element.dispatchEvent(new CustomEvent('cropcreate', { detail: [this] }));\n  }\n\n  /**\n   * Attach additional functionality\n   * Hook for extending init sequence\n   */\n  attach(): void {\n    // For extending init() sequence\n  }\n\n  /**\n   * Setup selection element\n   */\n  startup(): void {\n    const o = this.core.options;\n    \n    // Set default properties\n    Object.assign(this, SELECTION_DEFAULTS);\n    \n    // Set filters\n    this.filter = this.core.getDefaultFilters();\n    \n    // Create DOM elements\n    this.element = DomUtil.createElement('div', { \n      class: o.cssSelection || 'jcrop-selection' \n    });\n    this.element.dataset.selection = 'true';\n    \n    // Create frame/button\n    this.frame = DomUtil.createElement('button', { \n      class: o.cssButton || 'jcrop-box jcrop-drag',\n      type: 'button',\n      'data-ord': 'move'\n    });\n    \n    // Add elements to DOM\n    this.element.appendChild(this.frame);\n    this.core.container.appendChild(this.element);\n    \n    // Insert handle and border elements\n    this.insertElements();\n    \n    // Bind focus/blur events\n    this.frame.addEventListener('focus', () => {\n      this.core.setSelection(this);\n      this.element.dispatchEvent(new CustomEvent('cropfocus', { detail: this }));\n      DomUtil.addClass(this.element, 'jcrop-focus');\n    });\n    \n    this.frame.addEventListener('blur', () => {\n      DomUtil.removeClass(this.element, 'jcrop-focus');\n      this.element.dispatchEvent(new CustomEvent('cropblur', { detail: this }));\n    });\n  }\n\n  /**\n   * Properties to propagate from options\n   */\n  static propagateList = [\n    'canDelete', 'canDrag', 'canResize', 'canSelect',\n    'minSize', 'maxSize', 'aspectRatio', 'edge'\n  ];\n\n  /**\n   * Set options on the selection\n   */\n  setOptions(options: any): this {\n    // Copy relevant properties from options\n    for (const prop of Selection.propagateList) {\n      if (options[prop] !== undefined) {\n        (this as any)[prop] = options[prop];\n      }\n    }\n    \n    this.refresh();\n    return this;\n  }\n\n  /**\n   * Refresh selection state\n   */\n  refresh(): void {\n    this.allowResize();\n    this.allowDrag();\n    this.allowSelect();\n    this.callFilterFunction('refresh');\n    this.updateRaw(this.get(), 'se');\n  }\n\n  /**\n   * Call a function on all filters\n   */\n  callFilterFunction(funcName: string): this {\n    for (let i = 0; i < this.filter.length; i++) {\n      if (this.filter[i][funcName]) {\n        this.filter[i][funcName](this);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Add a filter to this selection\n   */\n  addFilter(filter: any): void {\n    filter.core = this.core;\n    \n    if (!this.hasFilter(filter)) {\n      this.filter.push(filter);\n      this.sortFilters();\n      \n      if (filter.init) filter.init();\n      this.refresh();\n    }\n  }\n\n  /**\n   * Check if filter is already added\n   */\n  hasFilter(filter: any): boolean {\n    return this.filter.includes(filter);\n  }\n\n  /**\n   * Sort filters by priority\n   */\n  sortFilters(): void {\n    this.filter.sort((a, b) => a.priority - b.priority);\n  }\n\n  /**\n   * Clear all filters\n   */\n  clearFilters(): void {\n    for (const filter of this.filter) {\n      if (filter.destroy) filter.destroy();\n    }\n    \n    this.filter = [];\n  }\n\n  /**\n   * Remove a specific filter\n   */\n  removeFilter(filterOrTag: any): void {\n    const newFilters = [];\n    \n    for (const filter of this.filter) {\n      if ((filter.tag && filter.tag === filterOrTag) || filter === filterOrTag) {\n        if (filter.destroy) filter.destroy();\n      } else {\n        newFilters.push(filter);\n      }\n    }\n    \n    this.filter = newFilters;\n  }\n\n  /**\n   * Run all filters on rectangle\n   */\n  runFilters(rect: Rect, direction: string): Rect {\n    let result = { ...rect };\n    \n    for (const filter of this.filter) {\n      result = filter.filter(result, direction, this);\n    }\n    \n    return result;\n  }\n\n  /**\n   * End drag operation\n   */\n  endDrag(): void {\n    if (this.state) {\n      document.removeEventListener('mousemove', this.state.onMove);\n      document.removeEventListener('mouseup', this.state.onEnd);\n      document.removeEventListener('touchmove', this.state.onMove);\n      document.removeEventListener('touchend', this.state.onEnd);\n      \n      this.focus();\n      this.state = null;\n    }\n  }\n\n  /**\n   * Start drag operation\n   */\n  startDrag(e: MouseEvent | TouchEvent, direction?: string): boolean {\n    if (!direction) {\n      const target = e.target as HTMLElement;\n      direction = target.dataset.ord || 'move';\n    }\n    \n    this.focus();\n    \n    // Check if dragging is disabled for this handle\n    if (direction === 'move' && \n        DomUtil.hasClass(this.element, this.core.options.cssNoDrag || 'jcrop-nodrag')) {\n      return false;\n    }\n    \n    // Create drag state\n    this.state = new DragState(e, this, direction);\n    return false;\n  }\n\n  /**\n   * Set whether selection can be selected\n   */\n  allowSelect(value?: boolean): this {\n    if (value === undefined) value = this.canSelect;\n    \n    this.frame.disabled = !value || !this.canSelect;\n    \n    return this;\n  }\n\n  /**\n   * Set whether selection can be dragged\n   */\n  allowDrag(value?: boolean): this {\n    if (value === undefined) value = this.canDrag;\n    \n    const cssNoDrag = this.core.options.cssNoDrag || 'jcrop-nodrag';\n    \n    if (value && this.canDrag) {\n      DomUtil.removeClass(this.element, cssNoDrag);\n    } else {\n      DomUtil.addClass(this.element, cssNoDrag);\n    }\n    \n    return this;\n  }\n\n  /**\n   * Set whether selection can be resized\n   */\n  allowResize(value?: boolean): this {\n    if (value === undefined) value = this.canResize;\n    \n    const cssNoResize = this.core.options.cssNoResize || 'jcrop-noresize';\n    \n    if (value && this.canResize) {\n      DomUtil.removeClass(this.element, cssNoResize);\n    } else {\n      DomUtil.addClass(this.element, cssNoResize);\n    }\n    \n    return this;\n  }\n\n  /**\n   * Remove the selection\n   */\n  remove(): void {\n    this.element.dispatchEvent(new CustomEvent('cropremove', { detail: this }));\n    DomUtil.remove(this.element);\n  }\n\n  /**\n   * Move selection to back\n   */\n  toBack(): void {\n    this.active = false;\n    DomUtil.removeClass(this.element, 'jcrop-current');\n    DomUtil.removeClass(this.element, 'jcrop-focus');\n  }\n\n  /**\n   * Move selection to front\n   */\n  toFront(): void {\n    this.active = true;\n    DomUtil.addClass(this.element, 'jcrop-current');\n    this.callFilterFunction('refresh');\n    this.refresh();\n  }\n\n  /**\n   * Redraw the selection at specified coordinates\n   */\n  redraw(rect: Rect): this {\n    this.moveTo(rect.x, rect.y);\n    this.resize(rect.w, rect.h);\n    this.last = { ...rect };\n    return this;\n  }\n\n  /**\n   * Update the selection using scaled coordinates\n   */\n  update(rect: Rect): this {\n    return this.updateRaw(this.core.scale(rect), 'se');\n  }\n\n  /**\n   * Update the selection using raw coordinates\n   */\n  updateRaw(rect: Rect, direction: string): this {\n    const filtered = this.runFilters(rect, direction);\n    this.redraw(filtered);\n    \n    this.element.dispatchEvent(\n      new CustomEvent('cropmove', { \n        detail: [this, this.core.unscale(filtered)] \n      })\n    );\n    \n    return this;\n  }\n\n  /**\n   * Animate selection to coordinates\n   */\n  animateTo(box: number[], callback?: () => void): void {\n    const animator = new Animator(this);\n    const rect = this.core.scale({\n      x: box[0],\n      y: box[1],\n      w: box[2],\n      h: box[3],\n      x2: box[0] + box[2],\n      y2: box[1] + box[3]\n    });\n    \n    animator.animate(rect.x, rect.y, rect.w, rect.h, callback);\n  }\n\n  /**\n   * Center the selection\n   */\n  center(instant: boolean = false): this {\n    const b = this.get();\n    const m = this.core;\n    const containerWidth = m.container.offsetWidth;\n    const containerHeight = m.container.offsetHeight;\n    \n    const box = [\n      (containerWidth - b.w) / 2,\n      (containerHeight - b.h) / 2,\n      b.w,\n      b.h\n    ];\n    \n    if (instant) {\n      this.setSelect(box);\n    } else {\n      this.animateTo(box);\n    }\n    \n    return this;\n  }\n\n  /**\n   * Create element for handles and borders\n   */\n  createElement(type: string, direction: string): HTMLElement {\n    const el = DomUtil.createElement('div', {\n      class: `${type} ord-${direction}`,\n      'data-ord': direction\n    });\n    \n    return el;\n  }\n\n  /**\n   * Move selection to coordinates\n   */\n  moveTo(x: number, y: number): void {\n    DomUtil.css(this.element, {\n      top: `${y}px`,\n      left: `${x}px`\n    });\n  }\n\n  /**\n   * Blur the selection\n   */\n  blur(): this {\n    this.frame.blur();\n    return this;\n  }\n\n  /**\n   * Focus the selection\n   */\n  focus(): this {\n    this.core.setSelection(this);\n    this.frame.focus();\n    return this;\n  }\n\n  /**\n   * Resize the selection\n   */\n  resize(w: number, h: number): void {\n    DomUtil.css(this.element, {\n      width: `${w}px`,\n      height: `${h}px`\n    });\n  }\n\n  /**\n   * Get selection coordinates\n   */\n  get(): Rect {\n    const position = DomUtil.getPosition(this.element);\n    const width = DomUtil.width(this.element);\n    const height = DomUtil.height(this.element);\n    \n    const rect: Rect = { \n      x: position.left, \n      y: position.top,\n      x2: position.left + width,\n      y2: position.top + height,\n      w: width,\n      h: height\n    };\n    \n    return rect;\n  }\n\n  /**\n   * Set selection by coordinates\n   */\n  setSelect(box: number[]): this {\n    if (box.length !== 4) {\n      throw new Error('Coordinate array must have 4 values');\n    }\n    \n    const rect = {\n      x: box[0],\n      y: box[1],\n      x2: box[0] + box[2],\n      y2: box[1] + box[3],\n      w: box[2],\n      h: box[3]\n    };\n    \n    this.update(rect);\n    return this;\n  }\n\n  /**\n   * Insert handle and border elements\n   */\n  insertElements(): void {\n    const o = this.core.options;\n    \n    // Add dragbars\n    if (o.dragbars) {\n      for (const dir of o.dragbars) {\n        this.element.appendChild(\n          this.createElement(o.cssDragBars || 'jcrop-dragbar jcrop-drag', dir)\n        );\n      }\n    }\n    \n    // Add handles\n    if (o.handles) {\n      for (const dir of o.handles) {\n        this.element.appendChild(\n          this.createElement(o.cssHandles || 'jcrop-handle jcrop-drag', dir)\n        );\n      }\n    }\n    \n    // Add borders\n    if (o.borders) {\n      for (const dir of o.borders) {\n        this.element.appendChild(\n          this.createElement(o.cssBorders || 'jcrop-border', dir)\n        );\n      }\n    }\n  }\n}","import { DomUtil } from '../lib/DomUtil';\n\n/**\n * Manages the cropping stage\n */\nexport class StageManager {\n  public core: any;\n  public shades: HTMLElement[] = [];\n  private active = false;\n  private initialized = false;\n\n  /**\n   * Create a new StageManager\n   */\n  constructor(core: any) {\n    this.core = core;\n    this.init();\n  }\n\n  /**\n   * Initialize the stage manager\n   */\n  init(): void {\n    this.createShades();\n    this.initialized = true;\n  }\n\n  /**\n   * Create the shades elements\n   */\n  createShades(): void {\n    const cssShades = this.core.options.cssShades || 'jcrop-shades';\n    \n    // Create the four shade elements\n    const shades = [\n      DomUtil.createElement('div', { class: `${cssShades} ${cssShades}-north` }),\n      DomUtil.createElement('div', { class: `${cssShades} ${cssShades}-east` }),\n      DomUtil.createElement('div', { class: `${cssShades} ${cssShades}-south` }),\n      DomUtil.createElement('div', { class: `${cssShades} ${cssShades}-west` })\n    ];\n    \n    // Add them to the container\n    for (const shade of shades) {\n      this.core.container.appendChild(shade);\n    }\n    \n    this.shades = shades;\n    \n    // Set shade styles\n    const bgColor = this.core.options.bgColor || 'black';\n    const bgOpacity = this.core.options.bgOpacity || 0.5;\n    \n    for (const shade of this.shades) {\n      DomUtil.css(shade, {\n        position: 'absolute',\n        backgroundColor: bgColor,\n        opacity: bgOpacity.toString(),\n        zIndex: '5'\n      });\n    }\n  }\n\n  /**\n   * Update shade positions based on the selection rectangle\n   */\n  updateShades(rect: { x: number; y: number; w: number; h: number }): void {\n    if (!this.active) return;\n    \n    const fullWidth = this.core.container.offsetWidth;\n    const fullHeight = this.core.container.offsetHeight;\n    \n    // North shade\n    DomUtil.css(this.shades[0], {\n      left: '0px',\n      top: '0px',\n      width: `${fullWidth}px`,\n      height: `${rect.y}px`\n    });\n    \n    // East shade\n    DomUtil.css(this.shades[1], {\n      left: `${rect.x + rect.w}px`,\n      top: `${rect.y}px`,\n      width: `${fullWidth - (rect.x + rect.w)}px`,\n      height: `${rect.h}px`\n    });\n    \n    // South shade\n    DomUtil.css(this.shades[2], {\n      left: '0px',\n      top: `${rect.y + rect.h}px`,\n      width: `${fullWidth}px`,\n      height: `${fullHeight - (rect.y + rect.h)}px`\n    });\n    \n    // West shade\n    DomUtil.css(this.shades[3], {\n      left: '0px',\n      top: `${rect.y}px`,\n      width: `${rect.x}px`,\n      height: `${rect.h}px`\n    });\n  }\n\n  /**\n   * Show shades\n   */\n  showShades(): void {\n    if (this.active) return;\n    \n    // Show shade elements\n    for (const shade of this.shades) {\n      DomUtil.css(shade, { display: 'block' });\n    }\n    \n    this.active = true;\n  }\n\n  /**\n   * Hide shades\n   */\n  hideShades(): void {\n    if (!this.active) return;\n    \n    // Hide shade elements\n    for (const shade of this.shades) {\n      DomUtil.css(shade, { display: 'none' });\n    }\n    \n    this.active = false;\n  }\n\n  /**\n   * Enable the stage for use\n   */\n  enable(): void {\n    this.showShades();\n    DomUtil.addClass(this.core.container, 'jcrop-active');\n  }\n\n  /**\n   * Disable the stage\n   */\n  disable(): void {\n    this.hideShades();\n    DomUtil.removeClass(this.core.container, 'jcrop-active');\n  }\n  \n  /**\n   * Update the stage\n   */\n  update(rect: { x: number; y: number; w: number; h: number }): void {\n    this.updateShades(rect);\n  }\n}","/**\n * Utility for loading images\n */\nexport class ImageLoader {\n  /**\n   * Load an image and get its dimensions\n   */\n  static load(src: string, callback: (width: number, height: number) => void): void {\n    const img = new Image();\n    \n    img.onload = function() {\n      const width = img.naturalWidth;\n      const height = img.naturalHeight;\n      callback(width, height);\n    };\n    \n    img.src = src;\n  }\n\n  /**\n   * Attach to an existing image element\n   */\n  static attach(el: HTMLImageElement, callback: (width: number, height: number) => void): void {\n    if (el.complete) {\n      // Image already loaded\n      callback(el.naturalWidth, el.naturalHeight);\n    } else {\n      // Wait for image to load\n      el.onload = function() {\n        callback(el.naturalWidth, el.naturalHeight);\n      };\n    }\n  }\n}","/**\n * Touch support for mobile devices\n */\nexport class Touch {\n  private core: any;\n\n  /**\n   * Create a new Touch handler\n   */\n  constructor(core: any) {\n    this.core = core;\n    this.init();\n  }\n\n  /**\n   * Initialize touch handlers\n   */\n  init(): void {\n    // Add touch-specific class to container\n    this.core.container.classList.add('jcrop-touch');\n    \n    // Prevent default touchmove behavior (scrolling)\n    this.core.container.addEventListener('touchmove', (e: TouchEvent) => {\n      e.preventDefault();\n    }, { passive: false });\n    \n    // Prevent contextmenu on long-press\n    this.core.container.addEventListener('contextmenu', (e: Event) => {\n      e.preventDefault();\n      return false;\n    });\n    \n    // Handle tap events to create selections if none exist\n    this.core.container.addEventListener('touchstart', this.onTouchStart.bind(this));\n  }\n\n  /**\n   * Handle touch start event\n   */\n  onTouchStart(e: TouchEvent): void {\n    // If we have no selections and tap is not on a handle/control element\n    if (this.core.ui.multi.length === 0 && \n        !(e.target as HTMLElement).classList.contains(this.core.options.cssDrag || 'jcrop-drag')) {\n      \n      // Only handle single touch\n      if (e.touches.length !== 1) return;\n      \n      const touch = e.touches[0];\n      const containerRect = this.core.container.getBoundingClientRect();\n      \n      // Calculate position relative to container\n      const x = touch.clientX - containerRect.left;\n      const y = touch.clientY - containerRect.top;\n      \n      // Create a new selection at tap point\n      this.core.newSelection();\n      \n      // Set a small initial selection around tap point\n      const size = 100;\n      this.core.ui.selection.update({\n        x: Math.max(0, x - size/2),\n        y: Math.max(0, y - size/2),\n        x2: Math.min(containerRect.width, x + size/2),\n        y2: Math.min(containerRect.height, y + size/2),\n        w: Math.min(size, containerRect.width),\n        h: Math.min(size, containerRect.height)\n      });\n    }\n  }\n}","import { Filter } from '../types';\n\n// Filter registry to store filter constructors\nconst filterRegistry: Record<string, any> = {};\n\n/**\n * Register a filter class with the registry\n */\nexport function registerFilter(name: string, filterClass: any): void {\n  filterRegistry[name] = filterClass;\n}\n\n/**\n * Get a filter constructor from the registry\n */\nexport function getFilterConstructor(name: string): any {\n  return filterRegistry[name] || null;\n}","import { JcropOptions } from './types';\n\n/**\n * Default options for Jcrop\n */\nexport const DEFAULT_OPTIONS: JcropOptions = {\n  // Selection Behavior\n  edge: { n: 0, s: 0, e: 0, w: 0 },\n  setSelect: null,\n  linked: true,\n  linkCurrent: true,\n  canDelete: true,\n  canSelect: true,\n  canDrag: true,\n  canResize: true,\n\n  // Stage Behavior\n  allowSelect: true,\n  multi: false,\n  multiMax: false,\n  multiCleanup: true,\n  animation: true,\n  animEasing: 'ease',\n  animDuration: 400,\n  fading: true,\n  fadeDuration: 300,\n  fadeEasing: 'ease',\n  bgColor: 'black',\n  bgOpacity: 0.5,\n\n  // Startup options\n  applyFilters: ['constrain', 'extent', 'backoff', 'ratio', 'shader', 'round'],\n  borders: ['e', 'w', 's', 'n'],\n  handles: ['n', 's', 'e', 'w', 'sw', 'ne', 'nw', 'se'],\n  dragbars: ['n', 'e', 'w', 's'],\n\n  xscale: 1,\n  yscale: 1,\n\n  boxWidth: null,\n  boxHeight: null,\n\n  // CSS Classes\n  cssNoDrag: 'jcrop-nodrag',\n  cssDrag: 'jcrop-drag',\n  cssContainer: 'jcrop-active',\n  cssShades: 'jcrop-shades',\n  cssSelection: 'jcrop-selection',\n  cssBorders: 'jcrop-border',\n  cssHandles: 'jcrop-handle jcrop-drag',\n  cssButton: 'jcrop-box jcrop-drag',\n  cssNoResize: 'jcrop-noresize',\n  cssDragBars: 'jcrop-dragbar jcrop-drag',\n};","import { EventEmitter } from './lib/EventEmitter';\nimport { DomUtil } from './lib/DomUtil';\nimport { JcropOptions, Rect } from './types';\nimport { Selection } from './components/Selection';\nimport { DragState } from './components/DragState';\nimport { StageManager } from './components/StageManager';\nimport { ImageLoader } from './components/ImageLoader';\nimport { Touch } from './components/Touch';\nimport { registerFilter, getFilterConstructor } from './filters/registry';\nimport { DEFAULT_OPTIONS } from './defaults';\n\n/**\n * Main Jcrop class\n */\nexport class Jcrop extends EventEmitter {\n  public container: HTMLElement;\n  public options: JcropOptions;\n  public ui: {\n    multi: Selection[];\n    selection: Selection | null;\n    keyboard?: any;\n    manager?: StageManager;\n  };\n  public state: DragState | null = null;\n  public filter: Record<string, any> = {};\n\n  /**\n   * Create a new Jcrop instance\n   */\n  constructor(element: HTMLElement | string, options: JcropOptions = {}) {\n    super();\n    \n    // Handle string selector\n    if (typeof element === 'string') {\n      const el = document.querySelector(element);\n      if (!el) {\n        throw new Error(`Element not found: ${element}`);\n      }\n      element = el as HTMLElement;\n    }\n    \n    // Merge default options with user options\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n    \n    // Initialize container\n    this.container = element;\n    DomUtil.addClass(this.container, this.options.cssContainer || 'jcrop-active');\n    \n    // Initialize UI state\n    this.ui = {\n      multi: [],\n      selection: null\n    };\n    \n    // Initialize components\n    this.init();\n    \n    // Apply additional options\n    this.setOptions(options);\n    \n    // Apply size constraints\n    this.applySizeConstraints();\n    \n    // Trigger init event\n    this.emit('cropinit', this);\n  }\n\n  /**\n   * Initialize Jcrop components\n   */\n  init(): void {\n    // Initialize stage manager\n    this.ui.manager = new StageManager(this);\n    \n    // Apply filters\n    this.applyFilters();\n    \n    // Add touch support if needed\n    if ('ontouchstart' in window) {\n      new Touch(this);\n    }\n    \n    // Initialize event handlers\n    this.initEvents();\n  }\n\n  /**\n   * Apply size constraints based on image or specified dimensions\n   */\n  applySizeConstraints(): void {\n    const opts = this.options;\n    const img = opts.imgsrc;\n    \n    if (img) {\n      const iw = img.naturalWidth || img.width;\n      const ih = img.naturalHeight || img.height;\n      const bw = opts.boxWidth || iw;\n      const bh = opts.boxHeight || ih;\n      \n      if ((iw > bw) || (ih > bh)) {\n        const bx = Jcrop.getLargestBox(iw/ih, bw, bh);\n        \n        img.width = bx[0];\n        img.height = bx[1];\n        \n        this.resizeContainer(bx[0], bx[1]);\n        \n        this.options.xscale = iw / bx[0];\n        this.options.yscale = ih / bx[1];\n      }\n    }\n    \n    if (opts.trueSize) {\n      const dw = opts.trueSize[0];\n      const dh = opts.trueSize[1];\n      const cs = this.getContainerSize();\n      \n      this.options.xscale = dw / cs[0];\n      this.options.yscale = dh / cs[1];\n    }\n  }\n\n  /**\n   * Initialize component by name and arguments\n   */\n  initComponent<T>(name: string, ...args: any[]): T | undefined {\n    // Component initialization will be added with component registry\n    return undefined;\n  }\n\n  /**\n   * Set options on the Jcrop instance\n   */\n  setOptions(options: JcropOptions, proptype?: any): this {\n    // Merge options\n    this.options = { ...this.options, ...options };\n    \n    // Handle setSelect option\n    if (this.options.setSelect) {\n      // If there is no current selection, create one\n      if (!this.ui.multi.length) {\n        this.newSelection();\n      }\n      \n      // Update selection with these values\n      this.setSelect(this.options.setSelect);\n      \n      // Clear setSelect option\n      this.options.setSelect = null;\n    }\n    \n    // Trigger update event\n    this.emit('configupdate');\n    \n    return this;\n  }\n\n  /**\n   * Destroy the Jcrop instance\n   */\n  destroy(): void {\n    if (this.options.imgsrc) {\n      // If we have an image, put it back where it was\n      const img = this.options.imgsrc;\n      DomUtil.before(this.container, img);\n      DomUtil.remove(this.container);\n      img.style.display = '';\n    } else {\n      // Otherwise just remove the container\n      DomUtil.remove(this.container);\n    }\n  }\n\n  /**\n   * Apply configured filters\n   */\n  applyFilters(): void {\n    if (!this.options.applyFilters) return;\n    \n    for (const filterName of this.options.applyFilters) {\n      const FilterClass = getFilterConstructor(filterName);\n      if (FilterClass) {\n        const filter = new FilterClass();\n        filter.core = this;\n        if (filter.init) filter.init();\n        this.filter[filterName] = filter;\n      }\n    }\n  }\n\n  /**\n   * Get default filters sorted by priority\n   */\n  getDefaultFilters(): any[] {\n    if (!this.options.applyFilters) return [];\n    \n    const filters = [];\n    \n    for (const filterName of this.options.applyFilters) {\n      if (this.filter[filterName]) {\n        filters.push(this.filter[filterName]);\n      }\n    }\n    \n    return filters.sort((a, b) => a.priority - b.priority);\n  }\n\n  /**\n   * Set the active selection\n   */\n  setSelection(selection: Selection): Selection {\n    const m = this.ui.multi;\n    const n: Selection[] = [];\n    \n    for (let i = 0; i < m.length; i++) {\n      if (m[i] !== selection) {\n        n.push(m[i]);\n        m[i].toBack();\n      }\n    }\n    \n    n.unshift(selection);\n    this.ui.multi = n;\n    this.ui.selection = selection;\n    selection.toFront();\n    \n    return selection;\n  }\n\n  /**\n   * Get the current selection\n   */\n  getSelection(): Rect {\n    if (!this.ui.selection) return { x: 0, y: 0, x2: 0, y2: 0, w: 0, h: 0 };\n    return this.ui.selection.get();\n  }\n\n  /**\n   * Create a new selection\n   */\n  newSelection(selection?: Selection): Selection {\n    if (!selection) {\n      selection = new Selection();\n    }\n    \n    selection.init(this);\n    this.setSelection(selection);\n    \n    return selection;\n  }\n\n  /**\n   * Check if a selection exists\n   */\n  hasSelection(selection: Selection): boolean {\n    return this.ui.multi.includes(selection);\n  }\n\n  /**\n   * Remove a selection\n   */\n  removeSelection(selection: Selection): Selection[] {\n    const m = this.ui.multi;\n    const n: Selection[] = [];\n    \n    for (let i = 0; i < m.length; i++) {\n      if (selection !== m[i]) {\n        n.push(m[i]);\n      } else {\n        m[i].remove();\n      }\n    }\n    \n    this.ui.multi = n;\n    \n    // Update current selection if needed\n    if (n.length && this.ui.selection === selection) {\n      this.ui.selection = n[0];\n    } else if (!n.length) {\n      this.ui.selection = null;\n    }\n    \n    return n;\n  }\n\n  /**\n   * Add a filter to all selections\n   */\n  addFilter(filter: any): this {\n    for (let i = 0; i < this.ui.multi.length; i++) {\n      this.ui.multi[i].addFilter(filter);\n    }\n    \n    return this;\n  }\n\n  /**\n   * Remove a filter from all selections\n   */\n  removeFilter(filter: any): this {\n    for (let i = 0; i < this.ui.multi.length; i++) {\n      this.ui.multi[i].removeFilter(filter);\n    }\n    \n    return this;\n  }\n\n  /**\n   * Blur the current selection\n   */\n  blur(): this {\n    if (this.ui.selection) {\n      this.ui.selection.blur();\n    }\n    return this;\n  }\n\n  /**\n   * Focus the current selection\n   */\n  focus(): this {\n    if (this.ui.selection) {\n      this.ui.selection.focus();\n    }\n    return this;\n  }\n\n  /**\n   * Initialize event handlers\n   */\n  initEvents(): void {\n    // Prevent text selection\n    this.container.addEventListener('selectstart', e => e.preventDefault());\n    \n    // Handle drag start events\n    this.container.addEventListener('mousedown', this.startDrag.bind(this));\n  }\n\n  /**\n   * Select max area\n   */\n  maxSelect(): void {\n    const cs = this.getContainerSize();\n    this.setSelect([0, 0, cs[0], cs[1]]);\n  }\n\n  /**\n   * Nudge selection\n   */\n  nudge(x: number, y: number): void {\n    if (!this.ui.selection) return;\n    \n    const s = this.ui.selection;\n    const b = s.get();\n    \n    b.x += x;\n    b.x2 += x;\n    b.y += y;\n    b.y2 += y;\n    \n    // Keep within bounds\n    if (b.x < 0) {\n      b.x2 = b.w;\n      b.x = 0;\n    } else if (b.x2 > this.getContainerSize()[0]) {\n      b.x2 = this.getContainerSize()[0];\n      b.x = b.x2 - b.w;\n    }\n    \n    if (b.y < 0) {\n      b.y2 = b.h;\n      b.y = 0;\n    } else if (b.y2 > this.getContainerSize()[1]) {\n      b.y2 = this.getContainerSize()[1];\n      b.y = b.y2 - b.h;\n    }\n    \n    s.element.dispatchEvent(new CustomEvent('cropstart', { detail: [s, this.unscale(b)] }));\n    s.updateRaw(b, 'move');\n    s.element.dispatchEvent(new CustomEvent('cropend', { detail: [s, this.unscale(b)] }));\n  }\n\n  /**\n   * Refresh all selections\n   */\n  refresh(): void {\n    for (let i = 0; i < this.ui.multi.length; i++) {\n      this.ui.multi[i].refresh();\n    }\n  }\n\n  /**\n   * Blur all selections\n   */\n  blurAll(): void {\n    for (const selection of this.ui.multi) {\n      selection.toBack();\n    }\n  }\n\n  /**\n   * Scale coordinates from real to display\n   */\n  scale(b: Rect): Rect {\n    const xs = this.options.xscale || 1;\n    const ys = this.options.yscale || 1;\n    \n    return {\n      x: b.x / xs,\n      y: b.y / ys,\n      x2: b.x2 / xs,\n      y2: b.y2 / ys,\n      w: b.w / xs,\n      h: b.h / ys\n    };\n  }\n\n  /**\n   * Unscale coordinates from display to real\n   */\n  unscale(b: Rect): Rect {\n    const xs = this.options.xscale || 1;\n    const ys = this.options.yscale || 1;\n    \n    return {\n      x: b.x * xs,\n      y: b.y * ys,\n      x2: b.x2 * xs,\n      y2: b.y2 * ys,\n      w: b.w * xs,\n      h: b.h * ys\n    };\n  }\n\n  /**\n   * Request to delete current selection\n   */\n  requestDelete(): void {\n    if (this.ui.multi.length > 1 && this.ui.selection && this.ui.selection.canDelete) {\n      this.deleteSelection();\n    }\n  }\n\n  /**\n   * Delete current selection\n   */\n  deleteSelection(): void {\n    if (this.ui.selection) {\n      this.removeSelection(this.ui.selection);\n      if (this.ui.multi.length && this.ui.selection) {\n        this.ui.selection.refresh();\n      }\n    }\n  }\n\n  /**\n   * Animate selection to coordinates\n   */\n  animateTo(box: number[]): this {\n    if (this.ui.selection) {\n      this.ui.selection.animateTo(box);\n    }\n    return this;\n  }\n\n  /**\n   * Set selection coordinates\n   */\n  setSelect(box: number[] | null): this {\n    if (this.ui.selection && box) {\n      this.ui.selection.update(Jcrop.wrapFromXywh(box));\n    }\n    return this;\n  }\n\n  /**\n   * Handle drag start\n   */\n  startDrag(e: MouseEvent): void {\n    // Only left mouse button\n    if (e.button !== 0) return;\n    \n    const target = e.target as HTMLElement;\n    if (!target) return;\n    \n    // Check if target has the drag class\n    if (!target.classList.contains(this.options.cssDrag || 'jcrop-drag')) return;\n    \n    // Find the selection that contains this target\n    let selection: Selection | null = null;\n    const selectionEl = target.closest(`.${this.options.cssSelection || 'jcrop-selection'}`);\n    \n    if (selectionEl) {\n      selection = this.ui.multi.find(s => s.element === selectionEl) || null;\n    }\n    \n    if (!selection) return;\n    \n    // Get drag direction\n    const direction = target.getAttribute('data-ord') || 'move';\n    \n    // Trigger cropstart event\n    this.container.dispatchEvent(\n      new CustomEvent('cropstart', { detail: [selection, this.unscale(selection.get())] })\n    );\n    \n    // Start dragging\n    selection.startDrag(e, direction);\n    \n    e.preventDefault();\n  }\n\n  /**\n   * Get container size\n   */\n  getContainerSize(): [number, number] {\n    return [\n      this.container.offsetWidth,\n      this.container.offsetHeight\n    ];\n  }\n\n  /**\n   * Resize container\n   */\n  resizeContainer(w: number, h: number): void {\n    this.container.style.width = `${w}px`;\n    this.container.style.height = `${h}px`;\n    this.refresh();\n  }\n\n  /**\n   * Set image source\n   */\n  setImage(src: string, callback?: (w: number, h: number) => void): boolean {\n    const targ = this.options.imgsrc;\n    if (!targ) return false;\n    \n    ImageLoader.load(src, (w, h) => {\n      this.resizeContainer(w, h);\n      \n      targ.src = src;\n      targ.width = w;\n      targ.height = h;\n      \n      this.applySizeConstraints();\n      this.refresh();\n      \n      this.container.dispatchEvent(\n        new CustomEvent('cropimage', { detail: [this, targ] })\n      );\n      \n      if (typeof callback === 'function') {\n        callback.call(this, w, h);\n      }\n    });\n    \n    return true;\n  }\n\n  /**\n   * Update selection coordinates\n   */\n  update(b: Rect): void {\n    if (this.ui.selection) {\n      this.ui.selection.update(b);\n    }\n  }\n\n  /**\n   * Calculate largest box for given aspect ratio and dimensions\n   */\n  static getLargestBox(ratio: number, maxw: number, maxh: number): [number, number] {\n    let tw = maxw;\n    let th = maxw / ratio;\n    \n    if (th > maxh) {\n      th = maxh;\n      tw = maxh * ratio;\n    }\n    \n    return [Math.round(tw), Math.round(th)];\n  }\n\n  /**\n   * Convert x, y, w, h array to a rect object\n   */\n  static wrapFromXywh(arr: number[]): Rect {\n    if (arr.length !== 4) {\n      throw new Error('Coordinate array must have 4 values');\n    }\n    \n    return {\n      x: arr[0],\n      y: arr[1],\n      x2: arr[0] + arr[2],\n      y2: arr[1] + arr[3],\n      w: arr[2],\n      h: arr[3]\n    };\n  }\n}","import { Rect } from '../types';\nimport { registerFilter } from './registry';\n\n/**\n * Constrains selection to the stage boundaries\n */\nexport class ConstrainFilter {\n  public priority = 10;\n  public core: any;\n  public tag = 'constrain';\n\n  /**\n   * Initialize filter\n   */\n  init(): void {\n    // Nothing to initialize\n  }\n\n  /**\n   * Apply the filter\n   */\n  filter(rect: Rect, direction: string): Rect {\n    const containerWidth = this.core.container.offsetWidth;\n    const containerHeight = this.core.container.offsetHeight;\n    \n    // Make a copy of the rect\n    const result: Rect = { ...rect };\n    \n    // Constrain to container bounds\n    if (result.x < 0) result.x = 0;\n    if (result.y < 0) result.y = 0;\n    if (result.x2 > containerWidth) result.x2 = containerWidth;\n    if (result.y2 > containerHeight) result.y2 = containerHeight;\n    \n    // Recalculate width and height\n    result.w = result.x2 - result.x;\n    result.h = result.y2 - result.y;\n    \n    return result;\n  }\n}\n\n// Register the filter\nregisterFilter('constrain', ConstrainFilter);","import { Rect } from '../types';\nimport { registerFilter } from './registry';\n\n/**\n * Enforces aspect ratio constraints on selections\n */\nexport class RatioFilter {\n  public priority = 20;\n  public core: any;\n  public tag = 'ratio';\n\n  /**\n   * Initialize filter\n   */\n  init(): void {\n    // Nothing to initialize\n  }\n\n  /**\n   * Apply the filter\n   */\n  filter(rect: Rect, direction: string, selection: any): Rect {\n    // Skip if no aspect ratio is set\n    if (!selection.aspectRatio) return rect;\n    \n    // Make a copy of the rect\n    const result: Rect = { ...rect };\n    \n    // Get required ratio\n    const ratio = selection.aspectRatio;\n    \n    // Calculate target dimensions based on ratio\n    let newW = result.w;\n    let newH = result.h;\n    \n    // Determine which dimension to adjust based on drag direction\n    if (direction === 'n' || direction === 's') {\n      // Adjust width to match height\n      newW = newH * ratio;\n    } else if (direction === 'e' || direction === 'w') {\n      // Adjust height to match width\n      newH = newW / ratio;\n    } else {\n      // For corners or move, decide based on the larger dimension\n      if (newW / newH > ratio) {\n        // Width is too large\n        newW = newH * ratio;\n      } else {\n        // Height is too large\n        newH = newW / ratio;\n      }\n    }\n    \n    // Apply new dimensions while preserving the anchor point\n    // Anchor point depends on the drag direction\n    \n    if (direction === 'n' || direction === 'nw' || direction === 'ne') {\n      // North anchor is at bottom\n      result.y = result.y2 - newH;\n    }\n    \n    if (direction === 'w' || direction === 'nw' || direction === 'sw') {\n      // West anchor is at right\n      result.x = result.x2 - newW;\n    }\n    \n    // Update dimensions\n    result.w = newW;\n    result.h = newH;\n    result.x2 = result.x + newW;\n    result.y2 = result.y + newH;\n    \n    return result;\n  }\n}\n\n// Register the filter\nregisterFilter('ratio', RatioFilter);","/**\n * Jcrop TypeScript Version\n * Image cropping widget in TypeScript\n * \n * Based on Jcrop by Tapmodo Interactive LLC\n * Rewritten in TypeScript by Ivan Popelyshev\n */\n\nimport { Jcrop } from './Jcrop';\nimport './styles/jcrop.scss';\n\n// Import filters\nimport './filters/ConstrainFilter';\nimport './filters/RatioFilter';\nimport './filters/ShadeFilter';\n\n// Create factory function\nfunction create(element: HTMLElement | string, options: any = {}): Jcrop {\n  return new Jcrop(element, options);\n}\n\n// Static methods\ncreate.attach = (element: HTMLElement, options: any = {}): Jcrop => {\n  return new Jcrop(element, options);\n};\n\n// Export default as the main API\nexport default create;","import { Rect } from '../types';\nimport { registerFilter } from './registry';\n\n/**\n * Updates shades when selection changes\n */\nexport class ShadeFilter {\n  public priority = 100; // Run last\n  public core: any;\n  public tag = 'shader';\n\n  /**\n   * Initialize filter\n   */\n  init(): void {\n    // Nothing to initialize\n  }\n\n  /**\n   * Apply the filter\n   */\n  filter(rect: Rect): Rect {\n    // Update shades if stage manager exists\n    if (this.core.ui.manager) {\n      this.core.ui.manager.update(rect);\n    }\n    \n    return rect;\n  }\n\n  /**\n   * Refresh method called when selection is refreshed\n   */\n  refresh(selection: any): void {\n    if (selection.active && this.core.ui.manager) {\n      // Show shades for active selection\n      this.core.ui.manager.showShades();\n      \n      // Update shade positions\n      this.core.ui.manager.update(selection.get());\n    }\n  }\n}\n\n// Register the filter\nregisterFilter('shader', ShadeFilter);"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","EventEmitter","events","Map","on","event","callback","has","set","Set","add","off","delete","emit","args","forEach","e","console","error","DomUtil","createElement","tag","attributes","content","element","document","entries","value","className","setAttribute","textContent","addClass","classList","removeClass","remove","toggleClass","force","toggle","hasClass","contains","getPosition","rect","getBoundingClientRect","offsetRect","offsetParent","body","left","top","css","styles","undefined","style","width","offsetWidth","height","offsetHeight","setDimensions","selector","handler","addEventListener","target","matchingElement","closest","removeEventListener","wrap","wrapper","parentNode","insertBefore","appendChild","before","append","parent","removeChild","getComputedStyle","property","window","getPropertyValue","DragState","constructor","selection","direction","xmod","ymod","offsetX","offsetY","pos","getEventPosition","selectionRect","startX","x","startY","y","ox","oy","onMove","createMoveHandler","onEnd","createEndHandler","passive","pageX","pageY","touches","length","containerRect","core","container","docScrollLeft","pageXOffset","documentElement","scrollLeft","docScrollTop","pageYOffset","scrollTop","preventDefault","diffX","diffY","updateSelection","endDrag","newRect","x2","w","y2","h","dispatchEvent","CustomEvent","detail","unscale","updateRaw","Animator","animate","options","animation","current","duration","animDuration","startTime","performance","now","step","timestamp","elapsed","progress","Math","min","newX","newY","newW","newH","requestAnimationFrame","SELECTION_DEFAULTS","minSize","maxSize","aspectRatio","edge","n","s","bgColor","bgOpacity","last","state","active","linked","canDelete","canDrag","canResize","canSelect","Selection","super","filter","assign","init","startup","attach","setOptions","getDefaultFilters","class","cssSelection","dataset","frame","cssButton","type","insertElements","setSelection","propagateList","refresh","allowResize","allowDrag","allowSelect","callFilterFunction","funcName","i","addFilter","hasFilter","push","sortFilters","includes","sort","a","b","priority","clearFilters","destroy","removeFilter","filterOrTag","newFilters","runFilters","result","focus","startDrag","ord","cssNoDrag","disabled","cssNoResize","toBack","toFront","redraw","moveTo","resize","update","scale","filtered","animateTo","box","animator","center","instant","m","containerWidth","containerHeight","setSelect","blur","position","Error","dragbars","dir","cssDragBars","handles","cssHandles","borders","cssBorders","StageManager","shades","initialized","createShades","cssShades","shade","backgroundColor","opacity","toString","zIndex","updateShades","fullWidth","fullHeight","showShades","display","hideShades","enable","disable","ImageLoader","load","src","img","Image","onload","naturalWidth","naturalHeight","el","complete","Touch","onTouchStart","bind","ui","multi","cssDrag","touch","clientX","clientY","newSelection","size","max","filterRegistry","registerFilter","name","filterClass","DEFAULT_OPTIONS","linkCurrent","multiMax","multiCleanup","animEasing","fading","fadeDuration","fadeEasing","applyFilters","xscale","yscale","boxWidth","boxHeight","cssContainer","Jcrop","querySelector","applySizeConstraints","manager","initEvents","opts","imgsrc","iw","ih","bw","bh","bx","getLargestBox","resizeContainer","trueSize","dw","dh","cs","getContainerSize","initComponent","proptype","filterName","FilterClass","filters","unshift","getSelection","hasSelection","removeSelection","maxSelect","nudge","blurAll","xs","ys","requestDelete","deleteSelection","wrapFromXywh","button","selectionEl","find","getAttribute","setImage","targ","ratio","maxw","maxh","tw","th","round","arr","create"],"sourceRoot":""}